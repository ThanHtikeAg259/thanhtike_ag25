@using POS_OJT.Models
@using POS_OJT.Controllers
@model POS_OJT.Models.Product

<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>
        .container {
            position: relative;
            left: 10%;
        }

        .form-group span {
            color: red;
        }

        .form-group p {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Clone</h2>

        @using (Html.BeginForm("Clone", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <div class="col-md-10">
                <label for="category" class="lb1">Product Name<span>*</span></label>
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label for="category" class="lb1">Short Name<span>*</span></label>
                @Html.EditorFor(model => model.short_name, new { htmlAttributes = new { @maxlength = "20", @class = "form-control" } })
                <p>(20 characters only)</p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Category<span>*</span></label>
                @foreach (var listItem in (IEnumerable<SelectListItem>)Session["categorylist"])
                {
                    <input type="text" value="@listItem.Text" readonly />
                }
            </div>
        </div>

        <div class="form-group">
            <label>Shop Name<span>*</span></label>
            <select name="ddlShop" multiple="">
                @foreach (var listItem in (IEnumerable<SelectListItem>)Session["shoplist"])
                {
                    <option value=@listItem.Value  @(listItem.Selected ? "selected" : "")>
                        @listItem.Text
                    </option>
                }
            </select>
        </div>

        @*<div class="form-group">
            <label>Shop Name</label>
            <select name="ddlShop" multiple="">
                @foreach (var listItem in (IEnumerable<SelectListItem>)ViewBag.ShopList)
                {
                    <option value=@listItem.Value @(listItem.Selected ? "selected" : "")>
                        @listItem.Text
                    </option>
                }
            </select>
        </div>*@

        <div class="form-group">
            <div class="col-md-10">
                <label>Sales Price<span>*</span></label>
                @Html.EditorFor(model => model.sale_price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sale_price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Product Image</label>
                @Html.TextBoxFor(model => model.product_image_path, new { type = "file" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Minimum Quantity<span>*</span></label>
                @Html.EditorFor(model => model.minimum_quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.minimum_quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Manufacture Date</label>
                @Html.EditorFor(model => model.mfd_date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.mfd_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Expire Date</label>
                @Html.EditorFor(model => model.expire_date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.expire_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <label>Description</label>
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
